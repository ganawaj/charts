# Default values for zones.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ganawaj/zones
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

coredns:
  config: |
    (defaults) {
        reload 2s
        log
        debug
        errors
        any
        cancel
        ready
        health
    }

    https://:443. {
        auto {
            directory /etc/coredns/zones (.*).db {1}
            reload 5s
        }
        import defaults
    }


updateStrategy:
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# -- Number of pods of the deployment
# -- NOTE: not HA ready and replicas > 1 will cause DB locking with
# -- default values.
replicas: 1
# -- Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
revisionHistoryLimit: 10
# -- Additional deployment annotations
annotations: {}
# -- Additional deployment labels
labels: {}
# -- Additional pod annotations (e.g. for mesh injection or prometheus scraping)
podAnnotations: {}
# -- Additional Pod labels (e.g. for filtering Pod by custom labels)
podLabels: {}
# -- Additional containers (e.g. for metric offloading sidecars)
additionalContainers: []
# https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host
# - name: socat-proxy
#   image: alpine/socat:1.0.5
#   args: ["-s", "-u", "udp-recv:8125", "unix-sendto:/socket/socket"]
#   volumeMounts:
#     - name: dsdsocket
#       mountPath: /socket
# -- Additional volume mounts available for use with initContainers and additionalContainers
additionalVolumeMounts: []
# - name: media
#   mountPath: /movies
#   subPath: movies
# - name: media
#   mountPath: /tv
#   subPath: tv
# -- Additional volumes available for use with initContainers and additionalContainers
additionalVolumes: []
  # - name: media
  #   persistentVolumeClaim:
  #     claimName: qbittorrent-media
# - name: dsdsocket
#   hostPath:
#     path: /var/run/statsd-exporter
# -- Additional env available for use with initContainers and additionalContainers
additionalEnv: []
# -- Additional initContainers (e.g. for setting file permission as shown below)
initContainers: []
# - name: volume-permissions
#   image: busybox:latest
#   command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
#   securityContext:
#     runAsNonRoot: true
#     runAsGroup: 65532
#     runAsUser: 65532
#   volumeMounts:
#     - name: data
#       mountPath: /data

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  annotations: {}
  type: ClusterIP
  port: 80
  nodePort: ""
  clusterIP: ""
  clusterIPs: []
  externalIPs: []
  externalTrafficPolicy: ""
  ipFamilyPolicy: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []

# defaults to doh
additionalPorts:
  - name: dns
    containerPort: 53
    protocol: UDP
  - name: dot
    containerPort: 853
    protocol: TCP

# To use the livenessProbe, the health plugin needs to be enabled in CoreDNS' server config
livenessProbe:
  httpGet:
    path: /health
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
# To use the readinessProbe, the ready plugin needs to be enabled in CoreDNS' server config
readinessProbe:
  httpGet:
    path: /ready
    port: 8181
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
