# Default values for dns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ganawa/coredns
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullSecrets: []

replicaCount: 1

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

updateStrategy:
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 25%

terminationGracePeriodSeconds: 30

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Optional priority class to be used for the coredns pods. Used for autoscaler if autoscaler.priorityClassName not set.
priorityClassName: ""

# Configure the pod level securityContext.
podSecurityContext: {}

# Configure SecurityContext for Pod.
# Ensure that required linux capability to bind port number below 1024 is assigned (`CAP_NET_BIND_SERVICE`).
securityContext:
  capabilities:
    add:
      - NET_BIND_SERVICE


# To use the livenessProbe, the health plugin needs to be enabled in CoreDNS' server config
livenessProbe:
  httpGet:
    path: /health
    port: 8080
    scheme: HTTP
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
# To use the readinessProbe, the ready plugin needs to be enabled in CoreDNS' server config
readinessProbe:
  httpGet:
    path: /health
    port: 8181
    scheme: HTTP
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

# -- Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
revisionHistoryLimit: 10
# -- Additional deployment annotations
additionalAnnotations: {}
# -- Additional deployment labels
additionalLabels: {}
# -- Additional pod annotations (e.g. for mesh injection or prometheus scraping)
podAnnotations: {}
# -- Additional Pod labels (e.g. for filtering Pod by custom labels)
podLabels: {}
# -- Additional containers (e.g. for metric offloading sidecars)
additionalContainers: []
# https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host
# - name: socat-proxy
#   image: alpine/socat:1.0.5
#   args: ["-s", "-u", "udp-recv:8125", "unix-sendto:/socket/socket"]
#   volumeMounts:
#     - name: dsdsocket
#       mountPath: /socket
# -- Additional volume mounts available for use with initContainers and additionalContainers
additionalVolumeMounts: []
# - name: media
#   mountPath: /movies
#   subPath: movies
# - name: media
#   mountPath: /tv
#   subPath: tv
# -- Additional volumes available for use with initContainers and additionalContainers
additionalVolumes: []
  # - name: media
  #   persistentVolumeClaim:
  #     claimName: radarr-media
# - name: dsdsocket
#   hostPath:
#     path: /var/run/statsd-exporter
# -- Additional env available for use with initContainers and additionalContainers
additionalEnv: []
# -- Additional initContainers (e.g. for setting file permission as shown below)
initContainers: []
# - name: volume-permissions
#   image: busybox:latest
#   command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
#   securityContext:
#     runAsNonRoot: true
#     runAsGroup: 65532
#     runAsUser: 65532
#   volumeMounts:
#     - name: data
#       mountPath: /data


coredns:
  existingConfig:
    enabled: false
    name: config
    key: Corefile
  config: |
    (defaults) {
      reload 2s
      log
      debug
      errors
      loop
      any
      cancel
      ready
    }
    .:1053 {
      cache
      forward . tls://1.1.1.1 tls://1.0.0.1 {
          tls_servername cloudflare-dns.com
          health_check 60s
      }
      import defaults
    }

service:
  annotations: {}
  type: ClusterIP
  port: 53
  nodePort: ""
  clusterIP: ""
  clusterIPs: []
  externalIPs: []
  externalTrafficPolicy: ""
  ipFamilyPolicy: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []

additionalPorts: []
  # - name: doh
  #   containerPort: 443
  #   protocol: TCP
  # - name: dot
  #   containerPort: 853
  #   protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}


# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#toleration-v1-core
# for example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule
tolerations: []

# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#affinity-v1-core
# for example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master
affinity: {}
