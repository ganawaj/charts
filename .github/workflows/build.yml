name: '[CI/CD] [Charts] Build & Push chart'

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'charts/**'
      - '!**.md'

# env:
#   registry: oci://git.juanah.com/charts/

jobs:

  modified:
    name: 'Get modified charts'
    runs-on: ubuntu-latest
    outputs:
      chart: ${{ steps.check.outputs.chart }}
      chart_path: ${{ steps.check.outputs.chart_path }}
      chart_output: ${{ steps.check.outputs.chart_output }}
      result: ${{ steps.check.outputs.result }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - id: check
      run: |
        make check
  build:
    name: 'Build modified chart'
    runs-on: ubuntu-latest
    needs: modified
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
    - uses: actions/setup-python@v4
    - run: sudo apt-get install -y git-filter-repo
    - uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: |
        git-filter-repo --subdirectory-filter ${{ needs.modified.outputs.chart_path }} &&
        git remote add origin https://github.com/ganawaj/${{ needs.modified.outputs.chart}}-helm.git
    - uses: gittools/actions/gitversion/execute@v0
      id: gitversion
    - run: |
        helm package . --version ${{ steps.gitversion.outputs.semVer }}
    - name: Archive helm artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: |
          *.tgz

  helm:
    name: Upload OCI Helm chart to Dockerhub'
    needs:
    - build
    - modified
    runs-on: ubuntu-latest
    steps:
    - uses: azure/setup-helm@v4.0.0
    - uses: actions/download-artifact@v4
    - run: |
        ls && \
        cd artifacts && \
        ls && \
        helm registry login https://registry-1.docker.io -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASS }} && \
        helm push ${{ needs.modified.outputs.chart}}-${{ needs.build.outputs.version }}.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USER }}

  # oci:
  #   name: 'Upload OCI Helm chart to Github'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/download-artifact@v4
  #   - run: ls




  #         - name: Download all workflow run artifacts
  # uses: actions/download-artifact@v4






  #   container:
  #     image: ganawa/runner:latest
  # build:
  #   name: Helm build & push
  #   runs-on: ubuntu-latest
  #   needs: modified
  #   container:
  #     image: ganawa/runner:latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: azure/setup-helm@v3
  #     - run: make helm
  #       env:
  #         CHART: ${{ needs.modified.outputs.chart }}
  #         CHART_PATH: ${{ needs.modified.outputs.chart_path }}
  #         CHART_VERSION: ${{ needs.modified.outputs.chart_version }}
  #         # chart_output: ${{ needs.modified.outputs.chart_output }}
  #         USER: ${{ env.GITHUB_ACTOR }}
  #         PASS: ${{ secrets.USER_PAT  }}


  #         # helm registry login git.juanah.com -u ${{ env.GITHUB_ACTOR }} -p ${{ secrets.USER_PAT  }}
  #         # helm dependency build ${{ env.chart_path }}
  #         # helm package ${{ env.chart_path }}
  #         # helm push ${{ env.chart }}-${{ env.chart_version }}.tgz ${{ env.registry }}
  #     # -
  #     #   uses: docker/metadata-action@v4
  #     #   id: metadata
  #     #   with:
  #     #     images: |
  #     #       ${{ secrets.DOCKER_HUB_USERNAME }}/dns
  #     #     tags: |
  #     #       type=raw,value=latest,enable={{is_default_branch}}
  #     #       type=semver,pattern={{version}},value=${{ env.SemVer }}
  #     #     labels: |
  #     #       org.opencontainers.image.description=CoreDNS Server
  #     #       org.opencontainers.image.authors=Ganawa Juanah(ganawa@juanah.com)
  #     #       org.opencontainers.image.url=github.com/ganawaj/zones
  #     #       org.opencontainers.image.version=${{ env.SemVer }}
  #     #       org.opencontainers.image.ref.name=${{ env. BranchName }}

  #     # - uses: docker/setup-qemu-action@v2

  #     # - uses: docker/setup-buildx-action@v2

  #     # - uses: docker/login-action@v2
  #     #   with:
  #     #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #     #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     # - uses: docker/build-push-action@v3
  #     #   with:
  #     #     context: .
  #     #     file: build/docker/Dockerfile
  #     #     push: ${{ github.event_name != 'pull_request' }}
  #     #     tags: ${{ steps.metadata.outputs.tags }}
  #     #     labels: ${{ steps.metadata.outputs.labels }}