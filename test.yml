---
# Source: zones/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zones
  labels:
    helm.sh/chart: zones-0.1.0
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: zones/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zones
  namespace: default
  labels:
    helm.sh/chart: zones-0.1.0
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  Corefile: |-
    (defaults) {
        reload 2s
        log
        debug
        errors
        any
        cancel
        ready
        health
    }
    
    dns://. https://. {
        auto {
            directory /etc/coredns/zones (.*).db {1}
            reload 5s
        }
        import defaults
    }
---
# Source: zones/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zones
  labels:
    helm.sh/chart: zones-0.1.0
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 53
      targetPort: dns
      protocol: UDP
      name: dns
    - port: 53
      targetPort: dns-tcp
      protocol: TCP
      name: dns-tcp
  selector:
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
---
# Source: zones/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zones
  labels:
    helm.sh/chart: zones-0.1.0
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: zones
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      checksum/config: 7581bb1d3d410fe44232e25034b7f3737fd87c3be3f5cd1e9fefd55d586cac2e
      labels:
        app.kubernetes.io/name: zones
        app.kubernetes.io/instance: release-name
    spec:
      dnsPolicy: ClusterFirst
      serviceAccountName: release-name-zones
      securityContext:
        {}
      containers:
        - name: zones
          securityContext:
            {}
          image: "ganawaj/zones:0.1.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: dns
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
          - name: config-volume
            mountPath: /etc/coredns/Corefile
            subPath: Corefile
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config-volume
          configMap:
            name: release-name-zones
---
# Source: zones/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-zones-test-connection"
  labels:
    helm.sh/chart: zones-0.1.0
    app.kubernetes.io/name: zones
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-zones:']
  restartPolicy: Never
